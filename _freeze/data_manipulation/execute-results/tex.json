{
  "hash": "072aec6aea43388fa44030a0585115e8",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n# Importation et manipulation d'une base de données\n\n## Comprendre ce qu'est une base de données\n\nLorsqu'on souhaite répondre à une question, la démarche scientifique classique consiste à effectuer une série de mesures ou d'observations selon un protocole qui a été conçu en cohérence avec la question posée. En principe, ces mesures ou observations donnent lieu à l'obtention de valeurs. Ces valeurs peuvent être de forme numérique (e.g., les valeurs de taille de différents individus) ou de forme littérale (e.g., les valeurs de sexe de différents individus). Quelle que soit leur forme, les valeurs que l'on obtient dans un contexte qui est connu, comme dans le cas d'un protocole de mesures, ont un sens bien défini car elles sont associées à des choses que l'on a cherché à caractériser. Lorsqu'une valeur est porteuse d'un sens bien défini, on peut alors considérer qu'il s'agit d'une **donnée**.\nTrès souvent, pour répondre à une question, il est nécessaire d'acquérir plusieurs données qui seraient relatives à différentes choses que l'on a cherché à caractériser (e.g., la taille, la couleur, le poids, etc.), et qui seraient relatives également à différents individus chez qui l'on aurait souhaité caractériser ces choses. Afin de conduire les analyses qui permettraient de répondre à la question posée, il convient alors de répertorier toutes les données acquises dans un même document, et plus exactement dans un même fichier, qui serait la base de données, telle que présentée dans le @tbl-database.\n\n\n\n\n::: {#tbl-database .cell tbl-cap='Exemple de base de données'}\n::: {.cell-output-display}\n\n```{=latex}\n\\global\\setlength{\\Oldarrayrulewidth}{\\arrayrulewidth}\n\n\\global\\setlength{\\Oldtabcolsep}{\\tabcolsep}\n\n\\setlength{\\tabcolsep}{2pt}\n\n\\renewcommand*{\\arraystretch}{1.5}\n\n\n\n\\providecommand{\\ascline}[3]{\\noalign{\\global\\arrayrulewidth #1}\\arrayrulecolor[HTML]{#2}\\cline{#3}}\n\n\\begin{longtable}[c]{|p{0.42in}|p{0.70in}|p{0.63in}|p{1.19in}|p{0.77in}}\n\n\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{id}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{genre}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{taille}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{nb\\_victoires}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{niveau}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endfirsthead \n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{id}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{genre}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{taille}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{nb\\_victoires}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{niveau}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endhead\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{H}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.80}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{45}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{2}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{H}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.93}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{90}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{3}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{3}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{H}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.50}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{100}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{4}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{4}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{F}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.95}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{43}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{5}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{F}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.52}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{34}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{2}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{6}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{H}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.87}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{67}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{2}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{7}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.7in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{H}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.83}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.19in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{79}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.77in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{3}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\n\n\\end{longtable}\n\n\n\n\\arrayrulecolor[HTML]{000000}\n\n\\global\\setlength{\\arrayrulewidth}{\\Oldarrayrulewidth}\n\n\\global\\setlength{\\tabcolsep}{\\Oldtabcolsep}\n\n\\renewcommand*{\\arraystretch}{1}\n```\n\n:::\n:::\n\n\n\n\nLa base de données prend donc la forme d’un tableau. Plusieurs principes sont à respecter en général lors de la création d’une base de données. Tout d’abord, les lignes de la base de données (qu'on appelle des **observations**) doivent correspondre le cas échéant à des individus bien identifiés. Ensuite, chaque colonne doit correspondre à une variable. L’ensemble des données contenues dans une même ligne correspond donc aux données relatives aux différentes variables qui auraient été obtenues chez un même individu (e.g., la taille, le poids, le sexe, etc.). Dans le cas d’études où l'on évaluerait une ou plusieurs variables plusieurs fois  chez un même individu (i.e., à différentes moments, dans différentes conditions), il peut convenir de créer autant de lignes que de fois où les variables auraient été évaluées. Par exemple, le @tbl-databasePlusObs représente une base de données, certes très sommaire, qui contient des données d'individus dont on aurait évalué le poids deux fois, avant et après un programme de prise en charge. On remarque alors qu'il y a deux lignes par individu qui correspondent aux deux temps d'évaluation. La taille, elle, n'a été évaluée qu'une seule fois, en début de programme, mais pour éviter de laisser des cellules vides, la valeur initiale de la taille a été reproduite dans la seconde ligne.\n\n\n\n\n::: {#tbl-databasePlusObs .cell tbl-cap='Organisation d\\'une base de données avec des mesures répétées'}\n::: {.cell-output-display}\n\n```{=latex}\n\\global\\setlength{\\Oldarrayrulewidth}{\\arrayrulewidth}\n\n\\global\\setlength{\\Oldtabcolsep}{\\tabcolsep}\n\n\\setlength{\\tabcolsep}{2pt}\n\n\\renewcommand*{\\arraystretch}{1.5}\n\n\n\n\\providecommand{\\ascline}[3]{\\noalign{\\global\\arrayrulewidth #1}\\arrayrulecolor[HTML]{#2}\\cline{#3}}\n\n\\begin{longtable}[c]{|p{0.42in}|p{0.63in}|p{1.12in}|p{0.69in}}\n\n\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{id}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{taille}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 1.12in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{temps\\_eval}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.69in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{poids}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endfirsthead \n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{id}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{taille}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 1.12in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{temps\\_eval}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.69in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{poids}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endhead\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.75}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.12in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{pre}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.69in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{75}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.75}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.12in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{post}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.69in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{73}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{2}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.89}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.12in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{pre}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.69in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{90}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\centering}m{\\dimexpr 0.42in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{2}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.63in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{1.89}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.12in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{post}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.69in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{88}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\n\n\\end{longtable}\n\n\n\n\\arrayrulecolor[HTML]{000000}\n\n\\global\\setlength{\\arrayrulewidth}{\\Oldarrayrulewidth}\n\n\\global\\setlength{\\tabcolsep}{\\Oldtabcolsep}\n\n\\renewcommand*{\\arraystretch}{1}\n```\n\n:::\n:::\n\n\n\n\nEn principe, les données de la base qui ont été obtenues selon la même procédure d’acquisition représentent le même type de choses. Ces choses sont appelées des **variables** car elles varient selon les individus qui ont été étudiés et les conditions de mesure qui ont été mises en oeuvre (dans le cas où il y en aurait plusieurs). Lorsque ces choses ne sont pas censées varier, on parle de **constantes**. Une base de données peut comporter des variables de types différents (@tbl-typesVariables).\n\n\n\n\n::: {#tbl-typesVariables .cell tbl-cap='Les différents types de variables'}\n::: {.cell-output-display}\n\n```{=latex}\n\\global\\setlength{\\Oldarrayrulewidth}{\\arrayrulewidth}\n\n\\global\\setlength{\\Oldtabcolsep}{\\tabcolsep}\n\n\\setlength{\\tabcolsep}{2pt}\n\n\\renewcommand*{\\arraystretch}{1.5}\n\n\n\n\\providecommand{\\ascline}[3]{\\noalign{\\global\\arrayrulewidth #1}\\arrayrulecolor[HTML]{#2}\\cline{#3}}\n\n\\begin{longtable}[c]{|p{1.17in}|p{0.95in}|p{0.89in}}\n\n\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Type}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Continue}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Discrète}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endfirsthead \n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Type}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Continue}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Discrète}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endhead\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Quantitative}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Intervalle}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{X}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{X}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Ratio}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{X}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{X}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Qualitative}}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Nominale}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{X}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedright}m{\\dimexpr 1.17in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Ordinale}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.95in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 0.89in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{X}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\n\n\\end{longtable}\n\n\n\n\\arrayrulecolor[HTML]{000000}\n\n\\global\\setlength{\\arrayrulewidth}{\\Oldarrayrulewidth}\n\n\\global\\setlength{\\tabcolsep}{\\Oldtabcolsep}\n\n\\renewcommand*{\\arraystretch}{1}\n```\n\n:::\n:::\n\n\n\n\nLes **variables quantitatives** (aussi dites numériques) comportent des nombres dont les différences entre eux ont un sens physique. Parmi les variables quantitatives, il est possible de plus précisément distinguer celles qui peuvent être associées seulement à une **échelle d'intervalles**, et celles qui peuvent être aussi associées à une **échelle de ratios**. Les variables étant associables seulement à une  **échelle d'intervalles** ont la particularité de ne pas avoir de zéro naturel, de sorte que multiplier ou diviser les valeurs de cette variable n'aurait pas de sens. Un exemple de ce type de variables pourrait être la température exprimée en degrés Celsius. Avec cette variable, il est seulement possible de décrire le fait qu'il fait x degrés plus chaud ou plus froid à un endroit par rapport à un autre, mais cela n'aurait pas de sens de dire qu'il ferait deux fois plus chaud à un endroit où il y aurait 20°C par rapport à un endroit où il y aurait seulement 10°C. Il serait possible de le dire si 0°C correspondrait à \"pas de température du tout\", mais cela n'est évidemment pas le cas (cet exemple est repris de Danielle Navarro [-@navarroLearningStatistics2018]). En revanche, les variables pouvant être associées à une échelle de ratios présentent des valeurs qui, en plus de permettre de calculer des différences numériques qui ont un sens, peuvent être multipliées ou divisées, comme par exemple le temps de réaction à un stimulus donné.\n\nEn plus de la distinction échelle d'intervalles / échelle de ratios, les variables quantitatives peuvent être considérées comme étant soit **continues**, soit **discrètes**. Les variables quantitatives continues contiennent des nombres pouvant comporter théoriquement un nombre infini de décimales (e.g., la taille, le poids, etc.). Au contraire, les variables quantitatives discrètes ne peuvent contenir théoriquement que des nombres finis (e.g., le nombre de victoires sportives au cours d’une année). Certaines variables en théorie discrètes sont cependant souvent considérées comme continues tant le nombre de valeurs théoriquement possibles pour la variable est grand, tel que pour le nombre de globules blancs mesurés dans le sang [@labreucheDifferentsTypesVariables2010]. \n\nLes **variables  qualitatives** (aussi dites catégorielles), elles, contiennent des valeurs désignant non pas des quantités mais des modalités. Ces variables sont donc forcément discrètes. Les modalités peuvent être exprimées sous forme littérale ou numérique. Parmi les variables qualitatives, on distingue celles qui sont **nominales** et celles qui sont **ordinales**. Les variables qualitatives nominales contiennent des modalités qui ne peuvent pas être ordonnées (e.g., les couleurs, les genres, etc.). Au contraire, les variables qualitatives ordinales contiennent des modalités qui peuvent être ordonnées (e.g., les niveaux de compétition sportive : départemental ; régional ; interrégional ; national ; international). Les variables qualitatives ordinales qui prendraient des valeurs numériques pour indiquer par exemple un niveau d'expertise (e.g., 1, 2, 3, et 4) se différencient des variables quantitatives discrètes par l’absence d’information sur la distance qui sépare les nombres de cette variable [@labreucheDifferentsTypesVariables2010].\n\n## Fixer le répertoire de travail\n\nLorsque l'on souhaite réaliser l'analyse d'une base de données avec RStudio, il peut être utile et plus fonctionnel pour la suite de créer un dossier spécifique, sur l'ordinateur, relatif à son projet de travail. Ce dossier pourrait alors contenir au moins trois sous-dossiers appelés : \"data\" ; \"out\" ; et \"R\". L'idée ici est d'organiser tous les fichiers qui vont être utilisés et produits au cours du travail d'analyse. Le dossier \"data\" devrait ne contenir que les fichiers à analyser. Le dossier \"out\" ne devrait contenir que les fichiers qui sont exportés au cours des analyses réalisées. Et le dossier \"R\" ne devrait contenir que les fichiers .R qui servent à écrire et activer le code nécessaire aux analyses.\n\nUne fois la structure de travail créée, il est préférable de faire en sorte que l'emplacement sur le PC du dossier du projet en cours soit le point de départ des chemins d'accès qui serviront à importer des données dans RStudio ou à exporter des fichiers à partir de RStudio. Pour faire cela, il faut créer un fichier .Rproj dans le dossier général du projet. Pour créer ce fichier, il suffit de suivre, dans RStudio, le chemin suivant : **Fichier > New Project... > Existing Directory > Sélectionner le chemin d'accès au dossier souhaité > Cliquer sur Create Project**. Un grand avantage de cette procédure est que cela permet de ne pas écrire, dans le script, le chemin d'accès complet d'un fichier sur son PC (de la racine au fichier lui-même) et ainsi de ne pas révéler dans le script des informations qui sont relativement privées. Cette solution est donc celle à préférer, surtout lorsqu'on envisage de partager son script avec d'autres collaborateurs qui risqueraient qui plus est d'être gênés par cette ligne de code d'accès au fichier qui ne leur servirait à rien, car le chemin d'accès au dossier de travail d'un collègue sera très probablement différent de celui des autres collaborateurs.\n\nUne fois le projet bien configuré, il faut ensuite, dans RStudio, ouvrir un fichier **Script** où toutes les commandes seront écrites et enregistrables (chemin d'accès : **File > New File > R Script**). Une fois ouvert, il est possible d'enregistrer le script en appuyant sur **Ctrl+S**. \n\n## Importer la base de données\n\nIl existe plusieurs fonctions pour importer une base de données dans RStudio. La fonction `read_csv2()` du package `{readr}` permet d'importer par exemple des fichiers .csv qui, structurellement, séparent les données avec des points-virgules. C'est généralement le type de structure de fichier .csv que l'on obtient après avoir réalisé un export .csv à partir du logiciel Excel. Pour illustrer ici l'importation d'une base de données, il est d'abord possible d'en créer une dans le répertoire de travail actif, cela en exportant un tableau de données qui existe déjà avec le logiciel R. Le logiciel R dispose en effet d'un grand nombre de jeux de données différents que tout utilisateur peut consulter et manipuler. L'ensemble des jeux de données disponibles suite à l'installation par défaut de R est visible en lançant dans la Console la commande `data()`. Au fur et à mesure de la découverte des analyses montrées dans ce document, différents jeux de données seront utilisés en fonction des besoins. Pour le moment, il est possible d'utiliser le jeu de données qui s'appelle `iris`. Même si on ne le voit pas dans la fenêtre Environnement de RStudio, il est bel et bien là, disponible, prêt à être utilisé. Afin d'exporter ce jeu de données dans le répertoire de travail fixé au préalable, il est possible d'utiliser la fonction `write_csv2()` du package `{readr}`. Pour cela, il suffit d'utiliser le nom du jeu de données, puis d'indiquer entre guillemets le nom que l'on veut que le fichier exporté ait, tout en n'oubliant pas de mettre l'extension .csv à la fin du nom pour indiquer le format d'export, comme ci-dessous. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nwrite_csv2(x = iris, file = \"out/iris.csv\")\n```\n:::\n\n\n\n\nSi la commande ci-dessus est activée dans RStudio et que l'on jette ensuite un oeil dans le répertoire de travail (dossier \"out\"), il est alors possible d'y voir un nouveau fichier .csv du nom de `iris`. Maintenant qu'il existe une base de données dans le répertoire de travail actif, il est possible de concrétiser la procédure de son importation dans RStudio. Comme évoqué plus tôt dans ce document, il est intéressant, et en réalité nécessaire, d'assigner cette base de données à un nom pour pouvoir plus facilement manipuler le jeu de données par la suite. Ici, nous allons tout simplement associer ce nouvel objet au nom `iris`, tel que montré ci-dessous.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris <- read_csv2(file = \"out/iris.csv\")\n```\n:::\n\n\n\n\nSuite à l'activation de la commande,  RStudio nous montre un message d'information sur la manière dont la fonction `read_csv2()` a configuré le jeu de données importé. Ce message apparaît car la fonction importe le jeu de données non pas sous la forme d'un *data frame* comme nous avons pu en créer auparavant, mais sous la forme d'un *tibble*, qui désigne un format de tableau que l'on ne peut obtenir qu'en passant par le biais de fonctions associées à l'ensemble de packages `{tidyverse}`. Pour comprendre l'intérêt d'un *tibble*, revenons au format classique d'un *data frame* à l'aide de la fonction `as.data.frame()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris <- as.data.frame(x = iris)\n```\n:::\n\n\n\n\nÀ présent, regardons ce qu'il se passe si on lance le nom `iris` dans la Console... \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n```\n\n\n:::\n:::\n\n\n\n\nRStudio nous montre tout le jeu de données dans la Console, ce qui n'est pas très utile, d'autant plus que l'on peut perdre de vue la première ligne de titre lorsque le jeu de données contient beaucoup de lignes. Retournons donc au format *tibble* grâce à la fonction `as_tibble()` du package `{tibble}`, et voyons ce qu'il se passe lorsqu'on lance à nouveau le nom `iris` dans la Console.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\niris <- as_tibble(x = iris)\niris\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <chr>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# i 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\nCette fois, RStudio n'affiche que les premières lignes du jeu de données, et il fournit en plus de cela des informations quant aux types de variables présentes dans le jeu de données, en-dessous de la ligne de titres. Maintenant que la base de données a été importée, il ne reste plus qu'à voir différentes fonctions pour pouvoir configurer la base de données telle qu'on la voudrait pour réaliser confortablement les analyses.\n\n## Manipuler la base de données\n\n### Vérifier le succès de l'importation de la base\n\nAvant de débuter les analyses de la base de données, une bonne pratique est de vérifier si la base de données a été correctement importée avec RStudio. Une manière rapide de faire cela est de regarder les nombres d'observations (i.e., de lignes) et de variables (i.e., de colonnes) associés à l'objet crée lors de l'importation et visibles dans la fenêtre Environnement de RStudio, puis de cliquer sur le nom associé à l'objet. Lors de l'étape précédente, nous avons importé le jeu de données `iris` en l'appelant ainsi. Lorsque l'on cherche le nom `iris` dans la fenêtre Environnement, on peut voir que l'objet associé contient 150 observations et 5 variables, signes que la structure du jeu de données a été bien interprétée par R si l'on sait que ce sont effectivement les dimensions du jeu de données en question. Puis, lorsque l'on clique sur le nom `iris` dans la liste des noms montrés dans la fenêtre Environnement, RStudio ouvre un onglet qui contient les données. Il est alors possible de voir d'un simple coup d'oeil si les données sont bien présentes et organisées en lignes et en colonnes comme attendu.\n\n### Vérifier et reconfigurer les types des variables de la base\n\nIl convient de vérifier que les types des variables que RStudio a associés aux variables du jeu de données importé soient bien en accord avec ce qui était attendu. Pour vérifier les types des variables, il est possible d'utiliser la fonction `str()` avec le nom auquel on a associé la base de données.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [150 x 5] (S3: tbl_df/tbl/data.frame)\n $ Sepal.Length: num [1:150] 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num [1:150] 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num [1:150] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num [1:150] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : chr [1:150] \"setosa\" \"setosa\" \"setosa\" \"setosa\" ...\n```\n\n\n:::\n:::\n\n\n\n\nAprès avoir activé la commande contenant la fonction `str()`, la Console affiche plusieurs lignes d'information (cf. texte des résultats ci-dessus), avec à chaque fois le nom de la variable, son type, et les premières valeurs de la variable. Plusieurs termes peuvent être rencontrés selon la manière dont R a interprété les variables du jeu de données, notamment:\n\n* num : désigne une variable quantitative continue ;\n* int : dégine une variable quantitative discrète (avec des nombres entiers) ;\n* Factor : désigne une variable qualitative ;\n* chr : désigne une variable texte ;\n* Date : désigne une variable date.\n\nLe logiciel R s'appuie donc sur une classification des types de variables plus complexe que celle que nous avons présentée précédemment. On peut noter que les abbréviations montrées pour indiquer le type de variable en utilisant la fonction `str()` sont différentes de celles montrées lorsque l'on observe un jeu de données au format *tibble* dans la Console, mais ces différences reflètent en réalité principalement une divergence dans les stratégies d'écriture de l'information par les concepteurs des packages et des fonctions. En outre, si l'on veut déterminer le type d'une seule variable, ou plus globalement le type de l'objet qui nous intéresse, on peut utiliser la fonction `class()`. Utiliser un nom de variable avec cette fonction renverra le type de la variable, comme montré ci-dessous.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(x = iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n\n\nLorsque le type d'une variable ne correspond pas à celui attendu après avoir importé la base de données dans RStudio, il peut être utile de se questionner sur les erreurs qui ont pu causer cela. Lorsque l'on obtient une variable de type *Factor* ou de type *chr* alors qu'une variable de type *num* étaient attendue, une cause possible est que l'importation du jeu de données a été réalisée avec une fonction d'importation mal configurée par rapport au contenu du jeu de données. Par exemple, il est possible que la fonction d'importation du jeu de données reconnaissait les nombres décimaux seulement lorsqu'ils avaient des points (e.g., 24.3) alors qu'en réalité les nombres décimaux étaient écrits avec des virgules (e.g., 24,3) dans la base de données. Une autre possibilité est que l'on n'ait pas indiqué, dans la fonction d'importation, sous quelle forme se présentaient les valeurs manquantes de la base de données. Par exemple, avec des valeurs manquantes qui seraient notées \"NA\" dans des variables numériques de la base de données, l'usage de certaines fonctions d'importation sans indiquer à l'intérieur que \"NA\" désigne \"valeur manquante\" conduira R à interpréter les variables concernées comme des variables *chr*. En utilisant la fonction `read_csv2()` du package `readr`, ces écueils sont plus facilement évités car les paramètres par défaut de la fonction nous facilitent le travail. En revanche, d'autres fonctions, plus anciennes, comme `read.csv2()` qui est une fonction de base de R, nécessitent plus de vigilance.\n\nLorsque la modification du type de la variable est nécessaire, une stratégie possible est de créer une variable portant exactement le même nom à partir de la variable initiale et à laquelle on applique une fonction capable d'imposer un certain type de variable. Il existe une fonction pour chaque type de variable à définir, notamment : \n\n* La fonction `as.numeric()` pour obtenir un type de variable quantitative ;\n* La fonction `as.factor()` pour un obtenir un type de variable qualitative ;\n* La fonction `as.character()` pour un obtenir un type de variable texte ;\n* La fonction `as.Date()` pour obtenir un type de variable date.\n\nPar exemple, nous aurions pu vouloir faire en sorte que toutes les variables du jeu de données `iris` soient de type texte :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris$Sepal.Length <- as.character(x = iris$Sepal.Length)\niris$Sepal.Width <- as.character(x = iris$Sepal.Width)\niris$Petal.Length <- as.character(x = iris$Petal.Length)\niris$Petal.Width <- as.character(x = iris$Petal.Width)\niris$Species <- as.character(x = iris$Species)\n```\n:::\n\n\n\n\nRemarquons qu'à chaque fois, le nom de variable écrit à gauche de la flèche d'assignation est exactement le même que celui qui est écrit à droite de la flèche d'assignation dans la fonction `as.character()`, ce qui implique que la création de la nouvelle variable entraîne la suppression et le remplacement de la précédente qui portait le même nom. Il est possible de vérifier la conséquence de ces commandes avec la fonction `str()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [150 x 5] (S3: tbl_df/tbl/data.frame)\n $ Sepal.Length: chr [1:150] \"5.1\" \"4.9\" \"4.7\" \"4.6\" ...\n $ Sepal.Width : chr [1:150] \"3.5\" \"3\" \"3.2\" \"3.1\" ...\n $ Petal.Length: chr [1:150] \"1.4\" \"1.4\" \"1.3\" \"1.5\" ...\n $ Petal.Width : chr [1:150] \"0.2\" \"0.2\" \"0.2\" \"0.2\" ...\n $ Species     : chr [1:150] \"setosa\" \"setosa\" \"setosa\" \"setosa\" ...\n```\n\n\n:::\n:::\n\n\n\n\nCette stratégie de modification du type de la variable peut convenir lorsqu'il y a peu de variables à modifier. Cependant, lorsque la liste s'allonge, il peut être plus lisible, en matière de code, de fonctionner avec le symbole `|>` (qu'on appelle *pipe*) lorsque sa version de R est >= 4.1.0 (ou à défaut avec le symbole `%>%` du package `{magrittr}`), et la fonction `mutate()` du package `{dplyr}`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\niris <-\n  iris |> \n  mutate(\n    Sepal.Length = as.numeric(x = Sepal.Length),\n    Sepal.Width = as.numeric(x = Sepal.Width),\n    Petal.Length = as.numeric(x = Petal.Length),\n    Petal.Width = as.numeric(x = Petal.Width),\n    Species = as.factor(x = Species)\n  )\n```\n:::\n\n\n\n\nIci, le symbole `|>` permet d'indiquer à R que toutes les fonctions qui sont écrites après ce symbole s'appliquent à ce qui a été défini avant ce symbole. La fonction `mutate()`, dont nous reparlerons peu après, permet de créer de nouvelles variables dans le cadre de cette stratégie, soit en écrasant les anciennes variables si les anciens noms sont conservés, soit en créant de nouvelles variables si de nouveaux noms sont utilisés. Remarquons également qu'avec ce code, nous venons de créer un nouvel objet (en l'assignant à nouveau au nom `iris`) à partir de l'ancien objet, mais dont on a transformé les types des variables, perdant dans le même temps l'ancien objet.\n\nOn pourrait penser que le bloc de code montré juste ci-dessus n'est pas très satisfaisant car on répète finalement plusieurs fois une même action. Ici il y a seulement 5 variables dont 4 numériques donc cela peut encore aller. Mais s'il y en avait des dizaines et plus, devrait-on tout écrire comme ci-dessus ? Heureusement non. Pour éviter de réécrire la même action pour plusieurs variables, on peut utiliser la fonction `across()` du package `dplyr`, comme ceci : \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris <-\n  iris |>\n  mutate(across(c(Sepal.Length:Petal.Width), as.numeric),\n         Species = as.factor(Species))\n```\n:::\n\n\n\n\nEnfin, si la fonction `str()` a l'intérêt de faire partie des fonctions de base de R, on peut noter l'existence de fonctions associées à d'autres packages qui sont particulièrement intéressantes pour découvrir un jeu de données. C'est le cas notamment de la fonction `skim()` du package `{skimr}` :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nskim(iris)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |iris |\n|Number of rows           |150  |\n|Number of columns        |5    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|factor                   |1    |\n|numeric                  |4    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                |\n|:-------------|---------:|-------------:|:-------|--------:|:-------------------------|\n|Species       |         0|             1|FALSE   |        3|set: 50, ver: 50, vir: 50 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate| mean|   sd|  p0| p25|  p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|----:|----:|---:|---:|----:|---:|----:|:-----|\n|Sepal.Length  |         0|             1| 5.84| 0.83| 4.3| 5.1| 5.80| 6.4|  7.9|▆▇▇▅▂ |\n|Sepal.Width   |         0|             1| 3.06| 0.44| 2.0| 2.8| 3.00| 3.3|  4.4|▁▆▇▂▁ |\n|Petal.Length  |         0|             1| 3.76| 1.77| 1.0| 1.6| 4.35| 5.1|  6.9|▇▁▆▇▂ |\n|Petal.Width   |         0|             1| 1.20| 0.76| 0.1| 0.3| 1.30| 1.8|  2.5|▇▁▇▅▃ |\n\n\n:::\n:::\n\n\n\n\n### Sélectionner des variables avec `select()`\n\nCertains jeux de données peuvent être très larges, c'est-à-dire qu'ils peuvent contenir beaucoup de colonnes, parfois inutiles, et qui peuvent être gênantes lorsque l'on veut avoir une vue claire du contenu du jeu de données. La fonction `select()` du package `{dplyr}` permet de sélectionner des colonnes facilement.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> \n  dplyr::select(Petal.Length, Petal.Width, Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 3\n   Petal.Length Petal.Width Species\n          <dbl>       <dbl> <fct>  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.7         0.4 setosa \n 7          1.4         0.3 setosa \n 8          1.5         0.2 setosa \n 9          1.4         0.2 setosa \n10          1.5         0.1 setosa \n# i 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### Renommer des variables avec `rename()`\n\nIl est possible que certains noms de variables ne soient pas clairs ou trop longs, voire mal écrits, ce qui peut être gênant pour écrire un code le plus lisible possible. La fonction `rename()` du package `{dplyr}` permet de gérer cela. Dans l'exemple ci-dessous, on observe que le nouveau nom doit être écrit à gauche du signe `=`, alors que l'ancien nom doit être écrit à droite du signe `=`. Si le nom d'origine contient au moins une espace entre deux mots, ou encore s'il contient des caractères spéciaux, il convient d'encadrer le nom à remplacer par des guillemets (\" \").\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> \n  rename(Sepal_long = Sepal.Length,\n         Sepal_lar = Sepal.Width,\n         Petal_long = Petal.Length,\n         Petal_lar = Petal.Width,\n         Especes = Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 5\n   Sepal_long Sepal_lar Petal_long Petal_lar Especes\n        <dbl>     <dbl>      <dbl>     <dbl> <fct>  \n 1        5.1       3.5        1.4       0.2 setosa \n 2        4.9       3          1.4       0.2 setosa \n 3        4.7       3.2        1.3       0.2 setosa \n 4        4.6       3.1        1.5       0.2 setosa \n 5        5         3.6        1.4       0.2 setosa \n 6        5.4       3.9        1.7       0.4 setosa \n 7        4.6       3.4        1.4       0.3 setosa \n 8        5         3.4        1.5       0.2 setosa \n 9        4.4       2.9        1.4       0.2 setosa \n10        4.9       3.1        1.5       0.1 setosa \n# i 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\nCette méthode visant à renommer les variables pour modifier un caractère ou plusieurs caractères peut être à nouveau très fastidieuse en présence de nombreuses variables à renommer car mal écrite au départ. La fonction `clean_names()` du package `{janitor}` pourrait alors faire gagner beaucoup de temps. Cette fonction réécrit les noms des variables pour qu'elles soient titrées (nommées) conformément à certains standards, à savoir : pas de points en général dans les noms des variables, plutôt des tirets du bas ; éviter les majuscules dans les noms d'objet ; éviter les caractères spéciaux ; etc. Voilà ce que cela donnerait : \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\niris |>\n  clean_names()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 5\n   sepal_length sepal_width petal_length petal_width species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# i 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n### Créer des variables avec `mutate()`\n\nCertaines analyses peuvent nécessiter d'ajouter des variables à partir de calculs réalisés sur des variables qui existent déjà dans le jeu de données. La fonction `mutate()`, du package `{dplyr}`, et que nous avons déjà rencontrée précédemment, permet cela. Dans l'exemple ci-dessous, on observe que le nom de la nouvelle variable à créer est à gauche du signe `=` et que le calcul créant les nouvelles valeurs est décrit à droite du signe `=`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  mutate(ratio_sepal = Sepal.Length / Sepal.Width,\n         ratio_petal = Petal.Length / Petal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 7\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species ratio_sepal\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>         <dbl>\n 1          5.1         3.5          1.4         0.2 setosa         1.46\n 2          4.9         3            1.4         0.2 setosa         1.63\n 3          4.7         3.2          1.3         0.2 setosa         1.47\n 4          4.6         3.1          1.5         0.2 setosa         1.48\n 5          5           3.6          1.4         0.2 setosa         1.39\n 6          5.4         3.9          1.7         0.4 setosa         1.38\n 7          4.6         3.4          1.4         0.3 setosa         1.35\n 8          5           3.4          1.5         0.2 setosa         1.47\n 9          4.4         2.9          1.4         0.2 setosa         1.52\n10          4.9         3.1          1.5         0.1 setosa         1.58\n# i 140 more rows\n# i 1 more variable: ratio_petal <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n### Sélectionner des lignes avec `filter()`\n\nEn fonction des besoins de l'analyse, on peut vouloir ne retenir que certaines lignes du fichier de données. La fonction `filter()` du package `{dplyr}` est faite pour réaliser ce filtrage. Plusieurs opérateurs sont disponibles pour ne retenir que les lignes que l'on veut (cf. @tbl-SymbolsFilter).\n\n\n\n\n::: {#tbl-SymbolsFilter .cell tbl-cap='Les opérateurs utilisables avec la fonction filter()'}\n::: {.cell-output-display}\n\n```{=latex}\n\\global\\setlength{\\Oldarrayrulewidth}{\\arrayrulewidth}\n\n\\global\\setlength{\\Oldtabcolsep}{\\tabcolsep}\n\n\\setlength{\\tabcolsep}{2pt}\n\n\\renewcommand*{\\arraystretch}{1.5}\n\n\n\n\\providecommand{\\ascline}[3]{\\noalign{\\global\\arrayrulewidth #1}\\arrayrulecolor[HTML]{#2}\\cline{#3}}\n\n\\begin{longtable}[c]{|p{1.49in}|p{1.02in}}\n\n\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\raggedright}m{\\dimexpr 1.49in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Opération}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 1.02in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Opérateur}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endfirsthead \n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\raggedright}m{\\dimexpr 1.49in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Opération}}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{CFCFCF}\\centering}m{\\dimexpr 1.02in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{\\textbf{Opérateur}}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\\endhead\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\raggedright}m{\\dimexpr 1.49in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Égal}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.02in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{==}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedright}m{\\dimexpr 1.49in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Inférieur\\ ou\\ égal}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.02in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{<=}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\raggedright}m{\\dimexpr 1.49in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Supérieur\\ ou\\ égal}}} & \\multicolumn{1}{>{\\cellcolor[HTML]{EFEFEF}\\centering}m{\\dimexpr 1.02in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{>=}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\n\n\n\n\\multicolumn{1}{>{\\raggedright}m{\\dimexpr 1.49in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{Différent\\ de}}} & \\multicolumn{1}{>{\\centering}m{\\dimexpr 1.02in+0\\tabcolsep}}{\\textcolor[HTML]{000000}{\\fontsize{11}{11}\\selectfont{!=}}} \\\\\n\n\\noalign{\\global\\arrayrulewidth 0pt}\\arrayrulecolor[HTML]{000000}\n\n\\hhline{>{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}->{\\arrayrulecolor[HTML]{000000}\\global\\arrayrulewidth=1.5pt}-}\n\n\n\n\\end{longtable}\n\n\n\n\\arrayrulecolor[HTML]{000000}\n\n\\global\\setlength{\\arrayrulewidth}{\\Oldarrayrulewidth}\n\n\\global\\setlength{\\tabcolsep}{\\Oldtabcolsep}\n\n\\renewcommand*{\\arraystretch}{1}\n```\n\n:::\n:::\n\n\n\n\nDe plus, dans la configuration du code, ces opérateurs peuvent être couplés à l'opérateur `|` (OU) et à l'opérateur `&` (ET). Dans l'exemple ci-dessous, le code permet, à partir du jeu de données `iris`, de ne garder que les lignes du jeu de données qui contiennent les noms d'espèce *setosa* OU *virginica*, ET en même temps qui affichent une longueur de sépale inférieure ou égale à 5.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  filter((Species == \"setosa\" | Species == \"virginica\") &\n           Sepal.Length <= 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 29 x 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          4.9         3            1.4         0.2 setosa \n 2          4.7         3.2          1.3         0.2 setosa \n 3          4.6         3.1          1.5         0.2 setosa \n 4          5           3.6          1.4         0.2 setosa \n 5          4.6         3.4          1.4         0.3 setosa \n 6          5           3.4          1.5         0.2 setosa \n 7          4.4         2.9          1.4         0.2 setosa \n 8          4.9         3.1          1.5         0.1 setosa \n 9          4.8         3.4          1.6         0.2 setosa \n10          4.8         3            1.4         0.1 setosa \n# i 19 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### Réordonner les lignes avec `arrange()`\n\nOn peut vouloir trier les lignes du jeu de données selon un certain ordre, en fonction des valeurs d'une variable donnée. La fonction `arrange()` du package `{dplyr}` est très utile pour gérer ce genre de réalisation. L'exemple ci-dessous conduit à trier les données selon un ordre croissant en fonction des valeurs de la variable `Sepal.Length`. Le fait de mettre le symbole `-` devant le nom de la variable aurait conduit à un tri décroissant.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  arrange(Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          4.3         3            1.1         0.1 setosa \n 2          4.4         2.9          1.4         0.2 setosa \n 3          4.4         3            1.3         0.2 setosa \n 4          4.4         3.2          1.3         0.2 setosa \n 5          4.5         2.3          1.3         0.3 setosa \n 6          4.6         3.1          1.5         0.2 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          4.6         3.6          1           0.2 setosa \n 9          4.6         3.2          1.4         0.2 setosa \n10          4.7         3.2          1.3         0.2 setosa \n# i 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### Résumer des variables avec `group_by()` et `summarise()`\n\nBien qu'une base de données puisse contenir énormément de lignes, on peut n'en vouloir que la version résumée. Les fonctions `group_by()` et `summarise()` du package `{dplyr}` permettent de faire cela aisément. Dans l'exemple ci-dessous, la fonction `group_by()` permet d'indiquer que les calculs réalisés par la suite avec la fonction `summarise()` doivent être exécutés pour les modalités de la variable `Species` prises séparément. La fonction `summarise()`, quant à elle, permet d'exécuter différents calculs. Dans l'exemple ci-dessous, il s'agit de moyennes, obtenues à l'aide de la fonction `mean()`. De plus, la fonction `summarise()` permet, comme montré ci-dessous, d'indiquer à gauche du `=` le nom du titre du calcul alors effectué .\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |>\n  group_by(Species) |>\n  summarise(\n    mean_sep_len = mean(Sepal.Length),\n    mean_sep_wid = mean(Sepal.Width)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 x 3\n  Species    mean_sep_len mean_sep_wid\n  <fct>             <dbl>        <dbl>\n1 setosa             5.01         3.43\n2 versicolor         5.94         2.77\n3 virginica          6.59         2.97\n```\n\n\n:::\n:::\n\n\n\n\nAu cours des illustrations montrant l'usage des fonctions `select()` jusqu'à `summarise()`, il aura été possible de noter que les commandes n'écrasaient pas le jeu de données initial, ni ne créaient de nouveaux jeux de données, car aucune assignation à un nom n'était faite. Lorsqu'une assignation est réalisée, il est conseillé d'utiliser un nouveau nom, différent de celui utilisé pour le jeu de données initial, pour pouvoir revenir au jeu de données originel lorsque cela est souhaité. Ci-dessous un exemple de création d'un nouvel objet de type tableau (assigné au nom `iris2`) à partir de l'utilisation de la plupart des fonctions que nous venons de voir et qui peuvent être utilisées dans un même bloc de code grâce au *pipe* (`|>`) :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris2 <-\n  iris |>\n  dplyr::select(Petal.Length, Petal.Width, Species) |>\n  clean_names() |>\n  mutate(petal_ratio = petal_length / petal_width) |>\n  filter(\n    (species == \"setosa\" |\n            species == \"virginica\") & petal_ratio > 3\n    ) |>\n  arrange(-petal_ratio)\niris2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 65 x 4\n   petal_length petal_width species petal_ratio\n          <dbl>       <dbl> <fct>         <dbl>\n 1          1.5         0.1 setosa         15  \n 2          1.5         0.1 setosa         15  \n 3          1.4         0.1 setosa         14  \n 4          1.4         0.1 setosa         14  \n 5          1.1         0.1 setosa         11  \n 6          1.9         0.2 setosa          9.5\n 7          1.7         0.2 setosa          8.5\n 8          1.6         0.2 setosa          8  \n 9          1.6         0.2 setosa          8  \n10          1.6         0.2 setosa          8  \n# i 55 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### Passer d'une disposition en lignes à une disposition en colonnes et inversement avec `pivot_wider()` et `pivot_longer()`\n\nIl convient de respecter certaines règles de base lors de la conception d'une base de données (e.g., mettre les observations en lignes et les variables en colonnes). Toutefois, dans certains cas, même après avoir bien respecté les règles, la manière selon laquelle la base de données a été organisée peut finalement ne pas être adéquate pour pouvoir utiliser certaines fonctions. Prenons par exemple le cas où toutes les valeurs numériques d'une variable quantitative auraient été mises dans une même colonne en regard d'une variable qualitative pour que chaque valeur numérique corresponde à une modalité de cette variable qualitative (c'est le cas, par exemple, avec le jeu de données `iris`), et que la fonction à utiliser nécessiterait que l'on ait une colonne pour chacune des modalités de la variable qualitative, avec des colonnes mises côte à côte. Une fonction qui permet alors de passer d'un format \"long\" (i.e., toutes les valeurs numériques sont dans la même colonne) à un format \"large\" (i.e., les valeurs numériques sont réparties dans différentes colonnes selon la modalité à laquelle elles sont associées), est la fonction `pivot_wider()` du package `{tidyr}`. Pour pouvoir utiliser cette fonction, il faut qu'il y ait une variable permettant d'identifier à quels individus ou groupes appartiennent les données dont on va changer l'organisation. Dans une base de données classique, il y a généralement une variable présente pour cela. Toutefois, dans le jeu de données `iris`, il n'y a pas une telle variable. Pour pouvoir illustrer l'utilisation de la fonction `pivot_wider()`, nous avons donc, dans un jeu de données s'appelant à présent `iris2`, ajouté arbitrairement une variable `id` grâce à la fonction `mutate()` pour simuler le fait que les données de `iris` auraient été acquises en référence à des individus bien identifiés. Nous avons aussi ajouté une variable `date` pour pouvoir réaliser l'exemple :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris2 <-\n  iris |>\n  mutate(\n    id = rep(1:50, each = 3),\n    date = rep(c(2001:2003), times = 50)\n    ) |>\n  dplyr::select(id, date, Species,  everything()) |>\n  arrange(id, date) |>\n  as_tibble()\niris2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 150 x 7\n      id  date Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n   <int> <int> <fct>          <dbl>       <dbl>        <dbl>       <dbl>\n 1     1  2001 setosa           5.1         3.5          1.4         0.2\n 2     1  2002 setosa           4.9         3            1.4         0.2\n 3     1  2003 setosa           4.7         3.2          1.3         0.2\n 4     2  2001 setosa           4.6         3.1          1.5         0.2\n 5     2  2002 setosa           5           3.6          1.4         0.2\n 6     2  2003 setosa           5.4         3.9          1.7         0.4\n 7     3  2001 setosa           4.6         3.4          1.4         0.3\n 8     3  2002 setosa           5           3.4          1.5         0.2\n 9     3  2003 setosa           4.4         2.9          1.4         0.2\n10     4  2001 setosa           4.9         3.1          1.5         0.1\n# i 140 more rows\n```\n\n\n:::\n:::\n\n\n\n\nLa fonction `pivot_wider()` permet alors de mettre en colonnes les valeurs des variables sélectionnées pour chacune des trois modalités de la variable visée, ici la variable `date` dans l'exemple ci-dessous.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\niris3 <- \n  iris2 |> \n  pivot_wider(\n    names_from = date,\n    values_from = Sepal.Length : Petal.Width\n    )\niris3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 x 14\n      id Species Sepal.Length_2001 Sepal.Length_2002 Sepal.Length_2003\n   <int> <fct>               <dbl>             <dbl>             <dbl>\n 1     1 setosa                5.1               4.9               4.7\n 2     2 setosa                4.6               5                 5.4\n 3     3 setosa                4.6               5                 4.4\n 4     4 setosa                4.9               5.4               4.8\n 5     5 setosa                4.8               4.3               5.8\n 6     6 setosa                5.7               5.4               5.1\n 7     7 setosa                5.7               5.1               5.4\n 8     8 setosa                5.1               4.6               5.1\n 9     9 setosa                4.8               5                 5  \n10    10 setosa                5.2               5.2               4.7\n# i 42 more rows\n# i 9 more variables: Sepal.Width_2001 <dbl>, Sepal.Width_2002 <dbl>,\n#   Sepal.Width_2003 <dbl>, Petal.Length_2001 <dbl>, Petal.Length_2002 <dbl>,\n#   Petal.Length_2003 <dbl>, Petal.Width_2001 <dbl>, Petal.Width_2002 <dbl>,\n#   Petal.Width_2003 <dbl>\n```\n\n\n:::\n:::\n\n\n\n\nL'argument `names_from` a permis d'indiquer la variable à partir de laquelle on a dispatché les valeurs en colonnes, et l'argument `values_from` a permis de préciser les variables pour lesquelles on voulait que les valeurs numériques soient dispatchées. L'utilisation des deux-points (`:`) nous a permis de sélectionner toutes les variables allant de `Sepal.Length` à `Petal.Width` dans le jeu de données.\n\nDans une situation inverse à celle que nous venons de voir, nous pourrions vouloir une disposition des données davantage en lignes. Par exemple, s'agissant du jeu de données `iris`, nous pourrions vouloir une seule colonne comprenant tous les paramètres mesurés pour chaque fleur, et une seule colonne contenant les valeurs associées. La fonction `pivot_longer()` permet de faire ce genre de conversion, tel que montré ci-dessous :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Avant\nhead(iris, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 x 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n         <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n1          5.1         3.5          1.4         0.2 setosa \n2          4.9         3            1.4         0.2 setosa \n3          4.7         3.2          1.3         0.2 setosa \n4          4.6         3.1          1.5         0.2 setosa \n5          5           3.6          1.4         0.2 setosa \n```\n\n\n:::\n\n```{.r .cell-code}\n# Après\niris |> \n  pivot_longer(\n    cols = c(-Species),\n    names_to = \"Parameter\",\n    values_to = \"Value\"\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 600 x 3\n   Species Parameter    Value\n   <fct>   <chr>        <dbl>\n 1 setosa  Sepal.Length   5.1\n 2 setosa  Sepal.Width    3.5\n 3 setosa  Petal.Length   1.4\n 4 setosa  Petal.Width    0.2\n 5 setosa  Sepal.Length   4.9\n 6 setosa  Sepal.Width    3  \n 7 setosa  Petal.Length   1.4\n 8 setosa  Petal.Width    0.2\n 9 setosa  Sepal.Length   4.7\n10 setosa  Sepal.Width    3.2\n# i 590 more rows\n```\n\n\n:::\n:::\n\n\n\n\nDans la fonction `pivot_longer()` ci-dessus, nous avons indiqué à l'aide de l'argument `cols` et de la fonction `c()` avec le signe `-` la colonne que nous ne voulions pas utiliser avec la fonction (c'était plus rapide que d'indiquer dans la fonction `c()` les trois colonnes à utiliser). L'argument `names_to` nous a permis de donner un nom à la variable qualitative qui comporte à présent les modalités associées aux valeurs numériques, et l'argument `values_to` nous a permis de donner un nom à la colonne où se trouvent maintenant les valeurs numériques.\n\nLorsque l'on veut utiliser la fonction `pivot_longer()` sur plusieurs colonnes qui sont écrites avec la même logique (par exemple, avec un nom composé de deux morceaux séparés par un `_`, avec un morceau pour indiquer la chose mesurée, et un autre morceau pour indiquer la modalité), il convient de procéder comme ci-dessous :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Avant\nhead(iris3, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 x 14\n     id Species Sepal.Length_2001 Sepal.Length_2002 Sepal.Length_2003\n  <int> <fct>               <dbl>             <dbl>             <dbl>\n1     1 setosa                5.1               4.9               4.7\n2     2 setosa                4.6               5                 5.4\n3     3 setosa                4.6               5                 4.4\n4     4 setosa                4.9               5.4               4.8\n5     5 setosa                4.8               4.3               5.8\n# i 9 more variables: Sepal.Width_2001 <dbl>, Sepal.Width_2002 <dbl>,\n#   Sepal.Width_2003 <dbl>, Petal.Length_2001 <dbl>, Petal.Length_2002 <dbl>,\n#   Petal.Length_2003 <dbl>, Petal.Width_2001 <dbl>, Petal.Width_2002 <dbl>,\n#   Petal.Width_2003 <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Après\niris3 |> \n  pivot_longer(\n    cols = c(Sepal.Length_2001:Petal.Width_2003),\n    names_to = c(\".value\", \"date\"),\n    names_pattern = '(.*)_(.*)'\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 156 x 7\n      id Species date  Sepal.Length Sepal.Width Petal.Length Petal.Width\n   <int> <fct>   <chr>        <dbl>       <dbl>        <dbl>       <dbl>\n 1     1 setosa  2001           5.1         3.5          1.4         0.2\n 2     1 setosa  2002           4.9         3            1.4         0.2\n 3     1 setosa  2003           4.7         3.2          1.3         0.2\n 4     2 setosa  2001           4.6         3.1          1.5         0.2\n 5     2 setosa  2002           5           3.6          1.4         0.2\n 6     2 setosa  2003           5.4         3.9          1.7         0.4\n 7     3 setosa  2001           4.6         3.4          1.4         0.3\n 8     3 setosa  2002           5           3.4          1.5         0.2\n 9     3 setosa  2003           4.4         2.9          1.4         0.2\n10     4 setosa  2001           4.9         3.1          1.5         0.1\n# i 146 more rows\n```\n\n\n:::\n:::\n\n\n\n\nDans le code montré ci-dessus, l'argument `cols` a permis de sélectionner toutes les colonnes dont on voulait faire pivoter les données, l'argument `names_to` a permis d'indiquer qu'il faut garder des colonnes spécifiques  nommées avec le premier morceau du nom des variables antérieures (le mot `\".value\"` permet cela), et le mot `\"date\"` a permis de nommer la colonne avec les dates qui étaient les seconds morceaux des noms des variables antérieures.\n\nNous venons de voir plusieurs fonctions qui peuvent être très utiles pour pouvoir facilement préparer sa base de données en vue des futures analyses. Il ne s'agit que d'une vue très superficielle de tout le potentiel de manipulation des données qu'ont ces fonctions. Pour une vue plus approndie des possibilités qu'offrent ces fonctions, la lecture de l'ouvrage *R for Data Science* d'Hadley Wickham et de Garrett Grolemund [-@wickhamDataScience2017] sera particulièrement enrichissante. Cet ouvrage est en libre accès ici : https://r4ds.had.co.nz.\n\n## Résumé\n\n* La base de données est un tableau comportant l'ensemble des données avec les observations organisées en lignes et les variables organisées en colonnes.\n* Les grands types de variables que l'on peut retrouver dans une base de données sont les variables quantitatives (avec une échelle d'intervalles ou une échelle de ratios) et les variables qualitatives (nominales ou ordinales).\n* Avant de débuter un travail d'analyse, il est conseillé d'initialiser un projet (en créant un fichier .Rproj) dans un dossier où se trouvent le ou les fichiers à analyser.\n* Pour importer un jeu de données au format .csv, il est possible d'utiliser la fonction `readr::read_csv2()`.\n* Pour exporter un jeu de données au format .csv, il est possible d'utiliser la fonction `readr::write_csv2()`.\n* Pour mettre un tableau de données au format *data frame*, utiliser la fonction `as.data.frame()`.\n* Pour mettre un tableau de données au format *tibble*, utiliser la fonction `tibble::as_tibble()`.\n* Pour lister les variables présentes dans un tableau de données, utiliser la fonction `str()`, ou encore la fonction `skimr::skim()`.\n* Pour modifier les types des variables, utiliser des fonctions comme `as.numeric()`, `as.factor()`, `as.character()`, `as.Date()`, etc., éventuellement en combinaison avec la fonction `dplyr::across()` si cela s'y prête.\n* Pour sélectionner les variables d'un tableau de données, utiliser la fonction `dplyr::select()`.\n* Pour renommer les variables d'un tableau de données, utiliser la fonction `dplyr::rename()`, ou encore la fonction `janitor::clean_names()` pour une réécriture automatique des noms des variables.\n* Pour créer de nouvelles variables dans un tableau de données, utiliser la fonction `dplyr::mutate()`.\n* Pour sélectionner des lignes dans un tableau de données, utiliser la fonction `dplyr::filter()`.\n* Pour trier les lignes d'un tableau de données, utiliser la fonction `dplyr::arrange()`.\n* Pour résumer les variables d'un tableau de données, utiliser les fonctions `dplyr::group_by()` et `dplyr::summarise()`.\n* Pour passer d'un tableau de données au format *long* à un tableau de données au format *wide*, utiliser la fonction `tidyr::pivot_wider()`.\n* Pour passer d'un tableau de données au format *wide* à un tableau de données au format *long*, utiliser la fonction `tidyr::pivot_longer()`.\n* Pour enchaîner l'application de fonctions, utiliser le symbole `|>` (*pipe*) avec une version de R >= 4.1.0, ou à défaut le symbole `%>%` du package `{magrittr}`.\n",
    "supporting": [
      "data_manipulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-database\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-databasePlusObs\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-typesVariables\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\",\"tbl-SymbolsFilter\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontspec\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multicol\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hhline\"]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"\\\\newlength\\\\Oldarrayrulewidth\",\"\\\\newlength\\\\Oldtabcolsep\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hyperref\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontspec\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multicol\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hhline\"]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"\\\\newlength\\\\Oldarrayrulewidth\",\"\\\\newlength\\\\Oldtabcolsep\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hyperref\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontspec\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multicol\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hhline\"]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"\\\\newlength\\\\Oldarrayrulewidth\",\"\\\\newlength\\\\Oldtabcolsep\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hyperref\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontspec\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multicol\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hhline\"]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"\\\\newlength\\\\Oldarrayrulewidth\",\"\\\\newlength\\\\Oldtabcolsep\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"hyperref\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}